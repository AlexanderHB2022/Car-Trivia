:root {
  --color1: #2b3254;
  --color2: #3e4568;
  --color3: #52587d;
  --text-color: #ffffff;
  --correct: #538d4e;
  --present: #b59f3b;
  --absent: #3a3a3c;
  --error: hsl(0 72% 55%);
  --tile-size: clamp(3.2rem, 9vw, 4.2rem);
  --key-size: clamp(2.5rem, 8vw, 3.5rem);
  --font-main: 'Roboto', sans-serif;
}
* {
  caret-color: transparent;
}
body {
  background: linear-gradient(135deg, var(--color1), var(--color3));
  color: var(--text-color);
  font-family: var(--font-main);
  display: flex;
  flex-direction: column;
  align-items: center;
  min-height: 100vh;
  margin: 0;
}

button {
  background: var(--color3);
  color: var(--text-color);
  border: 2px solid var(--color2);
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 180ms ease, box-shadow 180ms ease,
    transform 180ms ease;
}

button:hover:not(:disabled) {
  background: var(--color2);
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
}

button:active:not(:disabled) {
  transform: scale(0.97);
}

button:focus-visible {
  outline: 2px solid var(--accent, var(--text-color));
  outline-offset: 2px;
}

button:disabled {
  opacity: 0.6;
  cursor: default;
}
.game-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1rem;
}

.top-bar {
  width: 100%;
  max-width: 600px;
  display: grid;
  grid-template-columns: var(--key-size) 1fr var(--key-size);
  align-items: center;
  padding: 0 0.5rem;
}

.top-bar h1 {
  margin: 0;
  text-align: center;
}

.top-bar-spacer {
  width: var(--key-size);
  height: var(--key-size);
}

.top-bar-action {
  width: var(--key-size);
  height: var(--key-size);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0;
}
.message {
  min-height: 1.5rem;
  margin-top: 0.5rem;
}
.board {
  display: grid;
  grid-template-rows: repeat(6, 1fr);
  gap: 0.5rem;
  margin-top: 1rem;
}
.row {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: 0.5rem;
}
.tile {
  width: var(--tile-size);
  height: var(--tile-size);
  border: 2px solid var(--color3);
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: calc(var(--tile-size) * 0.5);
  font-weight: bold;
  text-transform: uppercase;
  color: var(--text-color);
  background-color: var(--color1);
}
.tile.revealed {
  animation: flip 0.6s ease forwards;
}
.tile.correct {
  background-color: var(--correct);
  border-color: var(--correct);
}
.tile.present {
  background-color: var(--present);
  border-color: var(--present);
}
.tile.absent {
  background-color: var(--absent);
  border-color: var(--absent);
}
.row.shake {
  animation: shake 0.6s;
}
@keyframes flip {
  0% { transform: rotateX(0deg); }
  50% { transform: rotateX(90deg); }
  100% { transform: rotateX(0deg); }
}
@keyframes shake {
  10%, 90% { transform: translateX(-1px); }
  20%, 80% { transform: translateX(2px); }
  30%, 50%, 70% { transform: translateX(-4px); }
  40%, 60% { transform: translateX(4px); }
}
.keyboard {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin-top: 1rem;
}
.keyboard-row {
  display: flex;
  justify-content: center;
  gap: 0.5rem;
}
.key {
  flex: 1;
  max-width: var(--key-size);
  padding: 0.75rem 0.5rem;
  background-color: var(--color3);
  color: var(--text-color);
  border: none;
  border-radius: 4px;
  font-weight: bold;
  font-size: 1rem;
}
.key.wide {
  flex: 1.5;
  max-width: none;
}
.key.correct { background-color: var(--correct); }
.key.present { background-color: var(--present); }
.key.absent { background-color: var(--absent); }


.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(4px);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.result-modal {
  background: var(--color2);
  color: var(--text-color);
  padding: 1.5rem;
  border-radius: 16px;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
  max-width: 90%;
  width: 320px;
  text-align: center;
}

.result-modal .restart-btn {
  padding: 0.5rem 1rem;
  font-weight: bold;
  margin: 1rem auto 0;
  display: block;
}

.give-up-btn {
  padding: 0.4rem 0.8rem;
  margin-left: 0.5rem;
}

/* --- New Utility Classes and Animations --- */

.container {
  width: min(100% - 2rem, 50rem);
  margin-inline: auto;
}

.game-stack > * + * {
  margin-top: clamp(1rem, 4vw, 2rem);
}

.shadow-soft {
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(4px);
}

.card {
  background: var(--color2);
  border-radius: 16px;
  padding: clamp(1rem, 4vw, 1.5rem);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
}

.btn-lg {
  padding: clamp(0.75rem, 2vw, 1rem) 1rem;
  font-size: clamp(1rem, 2.5vw, 1.125rem);
  border-radius: 12px;
  transition: background-color 180ms ease, box-shadow 180ms ease,
    transform 180ms ease;
}

.btn-lg:hover:not(:disabled) {
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
}

.btn-lg:active:not(:disabled) {
  transform: scale(0.97);
}

.btn-lg:focus-visible {
  outline: 2px solid var(--accent, var(--text-color));
  outline-offset: 2px;
}

.question-wrapper {
  width: 100%;
}

.question-card {
  text-align: center;
  font-size: clamp(1rem, 3.5vw, 1.25rem);
  min-height: 4.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.question-meta {
  display: flex;
  justify-content: space-between;
  font-size: 0.875rem;
  margin-bottom: 0.5rem;
  align-items: center;
}

.progress {
  display: flex;
  gap: 0.25rem;
}

.chip {
  width: 0.6rem;
  height: 0.6rem;
  border-radius: 50%;
  background: var(--present);
}

.chip.is-correct {
  background: var(--correct);
}

.chip.is-incorrect {
  background: var(--error);
}

.chip.is-skipped {
  background: var(--present);
}

.options-grid {
  display: grid;
  gap: 1rem;
  width: 100%;
  grid-template-columns: 1fr;
}

.question-nav {
  display: flex;
  justify-content: center;
  gap: 0.5rem;
  margin-top: 1rem;
  flex-wrap: wrap;
}

@media (min-width: 640px) {
  .options-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

.option-btn {
  padding: clamp(0.75rem, 2vw, 1rem);
  font-size: clamp(1rem, 2.5vw, 1.125rem);
  min-height: 3rem;
}

.option-btn.is-correct {
  background: var(--correct);
  border-color: var(--correct);
}

.option-btn.is-incorrect {
  background: var(--error);
  border-color: var(--error);
}

.option-btn.is-skipped {
  background: var(--present);
  border-color: var(--present);
}

.nav-btn {
  padding: clamp(0.75rem, 2vw, 1rem) 1.25rem;
  min-height: 3rem;
}

.result-modal {
  text-align: center;
}

.result-emoji {
  font-size: 2.5rem;
  margin-bottom: 0.5rem;
}

.result-score {
  font-size: 1.25rem;
  font-weight: bold;
  margin: 0.5rem 0 1rem;
}

.fade-in {
  animation: fade 0.4s ease;
}

.pop {
  animation: pop 0.3s ease;
}

.shake {
  animation: shake 0.3s ease;
}

@keyframes pop {
  0% {
    transform: scale(0.95);
  }
  70% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes fade {
  from {
    opacity: 0;
    transform: translateY(0.5rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@media (prefers-reduced-motion: reduce) {
  .fade-in,
  .pop,
  .shake {
    animation: none !important;
  }
  .btn-lg,
  .option-btn,
  .top-bar-action,
  .nav-btn {
    transition: none !important;
  }
}

/* === Car Trivia – UI refinements === */

/* Contenedor vertical consistente */
.game-container {
  display: grid;
  grid-template-rows: auto auto 1fr auto; /* meta/progreso | pregunta | opciones | navegación */
  row-gap: clamp(12px, 2.2vw, 20px);
  max-width: 720px;
  margin-inline: auto;
  padding-inline: clamp(12px, 2.2vw, 24px);
}

/* Pregunta con altura mínima estable para evitar saltos */
.question-card {
  min-height: clamp(96px, 14vh, 140px); /* 2–3 líneas */
  display: grid;
  align-content: center;
  padding: clamp(12px, 2vw, 20px);
  border-radius: var(--radius, 12px);
  box-shadow: var(--shadow, 0 10px 24px rgba(0,0,0,.15));
}

/* Grilla de opciones uniforme */
.options-grid {
  display: grid;
  gap: clamp(10px, 2vw, 16px);
  grid-template-columns: 1fr; /* mobile */
}
@media (min-width: 640px) {
  .options-grid { grid-template-columns: 1fr 1fr; }
}

/* Botones de opción con altura mínima uniforme */
.option-btn {
  min-height: 56px;
  border-radius: var(--radius, 12px);
  border: 1px solid var(--accent, rgba(255,255,255,.2));
  transition: background-color .18s, color .18s, border-color .18s, transform .18s, box-shadow .18s;
}

/* Al bloquear la pregunta, desactiva interacción, PERO no apagues el color de estado */
.option-btn:disabled { opacity: .6; cursor: default; }
.option-btn.is-correct,
.option-btn.is-incorrect {
  opacity: 1;                 /* <- quita opacidad lavada */
  color: var(--text-color, #fff);
}
.option-btn.is-correct {
  background: var(--correct);
  border-color: var(--correct);
  animation: pop .18s ease-out;
}
.option-btn.is-incorrect {
  background: var(--error, hsl(0 72% 55%));
  border-color: var(--error, hsl(0 72% 55%));
  animation: shake .24s linear;
}

/* Barra de progreso: 3 estados */
.progress-dot { opacity: .5; }
.progress-dot.is-current { opacity: 1; }
.progress-dot.is-correct { background: var(--correct) !important; opacity: 1; }
.progress-dot.is-incorrect { background: var(--error, hsl(0 72% 55%)) !important; opacity: 1; }
.progress-dot.is-skipped { background: var(--present) !important; opacity: 1; }

/* Navegación: 3 botones uniformes */
.nav-row {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  gap: clamp(10px, 2vw, 16px);
  justify-items: center;
}
.nav-btn {
  min-height: 44px;
  padding: 10px 16px;
  border-radius: var(--radius, 12px);
  background: transparent;
  border: 1px solid var(--accent, rgba(255,255,255,.25));
  color: var(--text-color, #fff);
  transition: background-color .18s, border-color .18s, box-shadow .18s, transform .18s;
}
.nav-btn:hover:not(:disabled) { transform: translateY(-1px); }
.nav-btn:disabled { opacity: .5; }

/* Emoji del TopBar: borde/outline, sin caja de fondo */
.icon-btn {
  background: transparent;
  border: 1px solid var(--accent, rgba(255,255,255,.25));
  border-radius: 999px;
  padding: 8px;
  box-shadow: none;
}

/* Animaciones sutiles */
@keyframes pop { 0%{transform: scale(.98)} 100%{transform: scale(1)} }
@keyframes shake {
  0%{ transform: translateX(0) } 25%{ transform: translateX(-2px) }
  50%{ transform: translateX(2px) } 75%{ transform: translateX(-2px) } 100%{ transform: translateX(0) }
}

/* Respeta reduced motion */
@media (prefers-reduced-motion: reduce) {
  .option-btn, .nav-btn { transition: none; }
  .option-btn.is-correct, .option-btn.is-incorrect { animation: none; }
}
